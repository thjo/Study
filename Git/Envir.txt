Download: https://git-scm.com/

1. Install 
  - download & install the package.
  - execute "Git Bash"
	# check version
	$ git --version
	# register user
	$ git config --global user.name "user_name"
	$ git config --global user.email "fortunejth@gmail.com"
	$ git config --list  >>> q


[Structure]
  Local Working Directory >> add >> Stage Area >> commit >> Local Repository >> fatch / >> Remote Repository
  Remote Repository >> pull >> Local Working Directory.

[Commands]
1. git init ##Working Directory 지정
2. .gitignore  ## 무시하고 publish하지 않아야 하는 것들
  >> https://github.com/github/gitignore
3. git status ## Stage 에 어떤 것이 존재하는지 
4-1. 파일 추가 - Staging 으로 저장
  $ git add .
  $ git add "<file name>"
4-2.추가한 파일 삭제
  $ git rm
  $ git rm --cached "<file name>"
  $ git reset
5-1. commit  ## 변동기록 version 등록 - 메시지를 반드시 남겨야 함
  $ git commit -m "<message>"
5-2. git log를 통해 commit한 내역 확인 - Local repositroy
6. branch - default는 Main으로 정해져 있음
  $ git branch -m main
7. 원격 저장소에 저장 - origin은 실제 remote_repository_name 이름 의미
  $ git remote add origin "<remote repository addr>"
8. push #-u 는 현재 작업 중인 branch와 뒤에 main과 매칭 
  $ git push -u origin main 


[협업]
- 업로드 된 코드 다운로드 
git clone 으로 받을 시 git 관련 파일(.git) 까지 받아서 history 내용까지 반영할 수 있음
git 웹 사이트에서 Download Zip 으로 다운받을 시 .git을 받지 못함 
1. 다운로드 clone - git clone  // 원격 소스를 로컬로 
  $ git clone https://github.com/[계정명]/[프로젝트명].git
  >> 해당 명령 실행 시 "프로젝트 명" 으로 폴더를 자동으로 만들어진 후 소스가 다운로드 됨
2. 브랜치 생성 
  $ git checkout -b <브랜치명>  //-b: 입력된 브랜치명으로 생성 후 해당 브랜치로 이동 
  $ git checkout  <브랜치명>

  ex. $ git checkout -b feature1          -- 입력된 브랜치명으로 생성 후 해당 브랜치로 이동 
        $ git commit -m <comments>  -- feature1 내용 commit
        $ git checkout  main     	   -- main으로 이동
        $ git merge feature1     	   -- main에 feature1을 merge 병합함.








